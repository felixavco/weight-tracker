{"version":3,"sources":["../../src/server/passportJWT.js"],"names":["opts","jwtFromRequest","ExtractJwt","fromAuthHeaderAsBearerToken","secretOrKey","process","env","SECRET","passportJWT","passport","use","JwtStrategy","jwt_payload","done","user","User","findById","id","error","console"],"mappings":";;;;;;;AAAA;;AAEA;;;;AAEA,MAAMA,IAAI,GAAG;AACZC,EAAAA,cAAc,EAAEC,wBAAWC,2BAAX,EADJ;AAEZC,EAAAA,WAAW,EAAEC,OAAO,CAACC,GAAR,CAAYC;AAFb,CAAb;;AAKA,MAAMC,WAAW,GAAIC,QAAD,IAAc;AACjCA,EAAAA,QAAQ,CAACC,GAAT,CACC,IAAIC,qBAAJ,CAAgBX,IAAhB,EAAsB,OAAOY,WAAP,EAAoBC,IAApB,KAA6B;AAElD,QAAI;AAEH,YAAMC,IAAI,GAAG,MAAMC,cAAKC,QAAL,CAAcJ,WAAW,CAACK,EAA1B,CAAnB;;AAEA,UAAI,CAACH,IAAL,EAAW;AACV,eAAOD,IAAI,CAAC,IAAD,EAAO,KAAP,CAAX;AACA,OANE,CAOH;;;AACA,aAAOA,IAAI,CAAC,IAAD,EAAOC,IAAP,CAAX;AAEA,KAVD,CAUE,OAAOI,KAAP,EAAc;AACfC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACA;AACD,GAfD,CADD;AAkBA,CAnBD;;eAqBeV,W","sourcesContent":["import { Strategy as JwtStrategy } from 'passport-jwt';\r\nimport { ExtractJwt } from 'passport-jwt';\r\nimport User from '../models/User';\r\n\r\nconst opts = {\r\n\tjwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\r\n\tsecretOrKey: process.env.SECRET\r\n};\r\n\r\nconst passportJWT = (passport) => {\r\n\tpassport.use(\r\n\t\tnew JwtStrategy(opts, async (jwt_payload, done) => {\r\n\r\n\t\t\ttry {\r\n\r\n\t\t\t\tconst user = await User.findById(jwt_payload.id);\r\n\r\n\t\t\t\tif (!user) {\r\n\t\t\t\t\treturn done(null, false);\r\n\t\t\t\t}\r\n\t\t\t\t// * If user is found return the user\r\n\t\t\t\treturn done(null, user);\r\n\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.error(error);\r\n\t\t\t}\r\n\t\t})\r\n\t);\r\n};\r\n\r\nexport default passportJWT;"],"file":"passportJWT.js"}